(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[400],{112:function(e,s,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api-reference/channel-api",function(){return i(6082)}])},6082:function(e,s,i){"use strict";i.r(s),i.d(s,{useTOC:function(){return c}});var n=i(5893),r=i(7812),a=i(1293),t=i(9299),l=i(5956),o=i(5192);function c(e){let s={code:"code",...(0,t.a)()};return[{value:"Channel Creation",id:"channel-creation",depth:2},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"createChannel(options): { channel, buffer }"})}),id:"createchanneloptions--channel-buffer-",depth:3},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"attachChannel(buffer: SharedArrayBuffer): Channel"})}),id:"attachchannelbuffer-sharedarraybuffer-channel",depth:3},{value:"Use in a second thread/worker to attach to an existing channel’s buffer.",id:"use-in-a-second-threadworker-to-attach-to-an-existing-channels-buffer",depth:4},{value:"Channel API: Core Methods",id:"channel-api-core-methods",depth:2},{value:"Send Data",id:"send-data",depth:3},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"send(payload: ArrayBufferView, producerId?: number): boolean"})}),id:"sendpayload-arraybufferview-producerid-number-boolean",depth:4},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"trySend(payload: ArrayBufferView, producerId?: number): boolean"})}),id:"trysendpayload-arraybufferview-producerid-number-boolean",depth:4},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"sendAsync(payload: ArrayBufferView, producerId?: number, opts?): Promise<boolean>"})}),id:"sendasyncpayload-arraybufferview-producerid-number-opts-promiseboolean",depth:4},{value:"Receive Data",id:"receive-data",depth:3},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"recv(): Uint8Array | null"})}),id:"recv-uint8array--null",depth:4},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"tryRecv(): Uint8Array | null"})}),id:"tryrecv-uint8array--null",depth:4},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"recvAsync(): Promise<Uint8Array | null>"})}),id:"recvasync-promiseuint8array--null",depth:4},{value:"JSON Helpers",id:"json-helpers",depth:3},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"sendJSON(obj: object, producerId?: number): boolean"})}),id:"sendjsonobj-object-producerid-number-boolean",depth:4},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"recvJSON(): object | null"})}),id:"recvjson-object--null",depth:4},{value:"Channel State",id:"channel-state",depth:3},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"full(): boolean"})}),id:"full-boolean",depth:4},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"empty(): boolean"})}),id:"empty-boolean",depth:4},{value:"Lifecycle & Control",id:"lifecycle--control",depth:3},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"close(): void"})}),id:"close-void",depth:4},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"closeAsync(): Promise<void>"})}),id:"closeasync-promisevoid",depth:4},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"reset(): void"})}),id:"reset-void",depth:4},{value:"Diagnostics & Introspection",id:"diagnostics--introspection",depth:3},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"stats(): ChannelStats"})}),id:"stats-channelstats",depth:4},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"info(): string"})}),id:"info-string",depth:4},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"validate(): void"})}),id:"validate-void",depth:4},{value:(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.code,{children:"[Symbol.asyncIterator](): AsyncIterator<Uint8Array, void>"})}),id:"symbolasynciterator-asynciteratoruint8array-void",depth:4},{value:"Advanced: Slot Status Internals",id:"advanced-slot-status-internals",depth:2},{value:"Diagnostics & Observability",id:"diagnostics--observability",depth:2},{value:"Troubleshooting",id:"troubleshooting",depth:2},{value:"Common Issues & Solutions",id:"common-issues--solutions",depth:3},{value:"Performance & Concurrency Tips",id:"performance--concurrency-tips",depth:2},{value:"Where to Go Next",id:"where-to-go-next",depth:2}]}s.default=(0,r.c)(function(e){let{toc:s=c(e)}=e,i={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:"Access the comprehensive SP8D Channel API reference for JavaScript and Node.js. Learn methods, options, diagnostics, troubleshooting, and best practices for lock-free, real-time, high-performance messaging."}),"\n",(0,n.jsx)(i.h1,{children:"SP8D Channel API Reference: Lock-Free Messaging for JavaScript & Node.js"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsxs)(i.strong,{children:["The ",(0,n.jsx)(i.code,{children:"Channel"})," API is at the heart of SP8D:"]})," It gives you explicit, lock-free, slot-driven control over cross-thread messaging—plus direct access to real-time diagnostics, segmentation, and backpressure handling."]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[0].id,children:s[0].value}),"\n",(0,n.jsx)(l.U,{type:"info",title:"Quick intro",children:(0,n.jsxs)(i.p,{children:["Create a channel for real-time, lock-free messaging. Use"," ","\n",(0,n.jsx)("code",{children:"createChannel"})," for new channels, ",(0,n.jsx)("code",{children:"attachChannel"})," to\nconnect in another thread."]})}),"\n",(0,n.jsx)(i.h3,{id:s[1].id,children:s[1].value}),"\n",(0,n.jsxs)(i.p,{children:["Creates a new SP8D channel, returning both the API object and the underlying ",(0,n.jsx)(i.code,{children:"SharedArrayBuffer"}),"."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Options:"})}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"slots"})," ",(0,n.jsx)(i.em,{children:"(number, required)"})," — Number of slots in the ring buffer."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"slotSize"})," ",(0,n.jsx)(i.em,{children:"(number, required)"})," — Max size (bytes) per payload."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"mode"})," ",(0,n.jsx)(i.em,{children:"(string: “SPSC” | “MPSC” | “MPMC”, optional)"})," — Concurrency mode. Default: ",(0,n.jsx)(i.code,{children:'"SPSC"'}),"."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"segments"})," ",(0,n.jsx)(i.em,{children:"(number)"})," — Segments for increased scale. Default: ",(0,n.jsx)(i.code,{children:"1"}),"."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"sweepTimeoutMs"})," ",(0,n.jsx)(i.em,{children:"(number)"})," — Slot reclaim timeout (ms). Default: ",(0,n.jsx)(i.code,{children:"50"}),"."]}),"\n"]}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsxs)(i.code,{"data-line-numbers":"","data-line-numbers-max-digits":"1",children:[(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"const"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" { "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"channel"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:", "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"buffer"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" } "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:" createChannel"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"({"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  slots: "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"16"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:","})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  slotSize: "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"64"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:","})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  mode: "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:'"MPMC"'}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:","})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  segments: "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"2"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:","})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"});"})})]})}),"\n",(0,n.jsx)(i.h3,{id:s[2].id,children:s[2].value}),"\n",(0,n.jsx)(i.h4,{id:s[3].id,children:s[3].value}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsxs)(i.code,{children:[(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// In a worker thread/process"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"const"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" channel"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" ="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:" attachChannel"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(buffer);"})]})]})}),"\n",(0,n.jsx)(i.h2,{id:s[4].id,children:s[4].value}),"\n",(0,n.jsx)(l.U,{type:"info",title:"How to use this section",children:(0,n.jsx)(i.p,{children:"Methods are grouped by intent. Each group starts with a short intro and best\npractices. Scan, deep-dive, or jump to what you need."})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:s[5].id,children:s[5].value}),"\n",(0,n.jsx)(l.U,{type:"info",title:"Best Practice",children:(0,n.jsxs)(i.p,{children:["Use ",(0,n.jsx)("code",{children:"trySend"})," in high-frequency or non-critical paths to avoid\nexceptions. Use ",(0,n.jsx)("code",{children:"send"})," when you must guarantee delivery or want to\ncatch errors."]})}),"\n",(0,n.jsx)(i.h4,{id:s[6].id,children:s[6].value}),"\n",(0,n.jsx)(i.p,{children:"Enqueue a message. Throws if full or payload too large. Use for critical, must-succeed sends."}),"\n",(0,n.jsx)(i.h4,{id:s[7].id,children:s[7].value}),"\n",(0,n.jsxs)(i.p,{children:["Enqueue a message. Returns ",(0,n.jsx)(i.code,{children:"false"})," if full or payload too large—never throws. Use for non-blocking, best-effort sends."]}),"\n",(0,n.jsx)(i.h4,{id:s[8].id,children:s[8].value}),"\n",(0,n.jsx)(i.p,{children:"Waits for a slot and sends. Supports timeout and abort. Use for async, backpressure-aware flows."}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsx)(i.code,{children:(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"await"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" channel."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"sendAsync"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(msg, myProducerId, { timeoutMs: "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"1000"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" });"})]})})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:s[9].id,children:s[9].value}),"\n",(0,n.jsx)(l.U,{type:"info",title:"Polling vs. Async",children:(0,n.jsxs)(i.p,{children:["Use ",(0,n.jsx)("code",{children:"recvAsync"})," for event-driven flows, and ",(0,n.jsx)("code",{children:"tryRecv"})," ","\nfor polling or non-blocking loops."]})}),"\n",(0,n.jsx)(i.h4,{id:s[10].id,children:s[10].value}),"\n",(0,n.jsxs)(i.p,{children:["Synchronous receive. Returns ",(0,n.jsx)(i.code,{children:"null"})," if empty. Use for polling or tight loops."]}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsxs)(i.code,{children:[(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"const"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" next"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" ="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" channel."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"recv"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"();"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"if"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" (next) "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"process"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(next);"})]})]})}),"\n",(0,n.jsx)(i.h4,{id:s[11].id,children:s[11].value}),"\n",(0,n.jsxs)(i.p,{children:["Non-throwing, non-blocking receive. Returns ",(0,n.jsx)(i.code,{children:"null"})," if empty."]}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsxs)(i.code,{children:[(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"const"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" msg"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" ="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" channel."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"tryRecv"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"();"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"if"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" (msg) "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"process"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(msg);"})]})]})}),"\n",(0,n.jsx)(i.h4,{id:s[12].id,children:s[12].value}),"\n",(0,n.jsx)(i.p,{children:"Async receive. Waits for a message. Use for event-driven or awaitable flows."}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsx)(i.code,{children:(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"const"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" msg"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" ="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" await"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" channel."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"recvAsync"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"();"})]})})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:s[13].id,children:s[13].value}),"\n",(0,n.jsx)(l.U,{type:"warning",title:"Gotcha",children:(0,n.jsx)(i.p,{children:"JSON helpers are for quick prototyping. For production, prefer binary\nserialization for performance and size."})}),"\n",(0,n.jsx)(i.h4,{id:s[14].id,children:s[14].value}),"\n",(0,n.jsx)(i.p,{children:"Send a JSON-serializable object. Throws if full or payload too large."}),"\n",(0,n.jsx)(i.h4,{id:s[15].id,children:s[15].value}),"\n",(0,n.jsxs)(i.p,{children:["Receive a JSON-serialized object. Returns ",(0,n.jsx)(i.code,{children:"null"})," if empty or parse fails."]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:s[16].id,children:s[16].value}),"\n",(0,n.jsx)(l.U,{type:"info",title:"Status Checks",children:(0,n.jsxs)(i.p,{children:["Use ",(0,n.jsx)("code",{children:"full()"})," and ",(0,n.jsx)("code",{children:"empty()"})," to check channel status\nbefore sending or receiving in tight loops."]})}),"\n",(0,n.jsx)(i.h4,{id:s[17].id,children:s[17].value}),"\n",(0,n.jsxs)(i.p,{children:["Returns ",(0,n.jsx)(i.code,{children:"true"})," if the channel is full (no slots available for sending)."]}),"\n",(0,n.jsx)(i.h4,{id:s[18].id,children:s[18].value}),"\n",(0,n.jsxs)(i.p,{children:["Returns ",(0,n.jsx)(i.code,{children:"true"})," if the channel is empty (no slots available for reading)."]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:s[19].id,children:s[19].value}),"\n",(0,n.jsx)(l.U,{type:"warning",title:"Shutdown",children:(0,n.jsxs)(i.p,{children:["After ",(0,n.jsx)("code",{children:"close()"}),", all send/recv methods will throw or return falsy.\nUse ",(0,n.jsx)("code",{children:"closeAsync"})," for graceful shutdowns in async environments."]})}),"\n",(0,n.jsx)(i.h4,{id:s[20].id,children:s[20].value}),"\n",(0,n.jsxs)(i.p,{children:["Immediately closes the channel and all internal timers. Cleans up, resets all state. After ",(0,n.jsx)(i.code,{children:"close()"}),", send/recv throw or return falsy."]}),"\n",(0,n.jsx)(i.h4,{id:s[21].id,children:s[21].value}),"\n",(0,n.jsx)(i.p,{children:"Gracefully closes the channel and waits for all background tasks to stop."}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsx)(i.code,{children:(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"await"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" channel."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"closeAsync"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"();"})]})})}),"\n",(0,n.jsx)(i.h4,{id:s[22].id,children:s[22].value}),"\n",(0,n.jsx)(i.p,{children:"Resets the channel to its initial state (empties all slots, resets counters). Does not reallocate the buffer."}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsx)(i.code,{children:(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"channel."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"reset"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"();"})]})})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:s[23].id,children:s[23].value}),"\n",(0,n.jsx)(l.U,{type:"info",title:"Advanced: Async Iteration",children:(0,n.jsxs)(i.p,{children:["The channel can be used as an async iterator for idiomatic, event-driven\nmessage consumption. Use ",(0,n.jsx)("code",{children:"stats()"})," and ",(0,n.jsx)("code",{children:"info()"})," for live\nmonitoring and debugging. Use ",(0,n.jsx)("code",{children:"validate()"})," in tests to catch\nprotocol errors early."]})}),"\n",(0,n.jsx)(i.h4,{id:s[24].id,children:s[24].value}),"\n",(0,n.jsx)(i.p,{children:"Returns a snapshot object of channel usage and health metrics."}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"slots"})," — total slots"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"used"})," — slots in use"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"free"})," — slots available"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"errors, conflicts, reclaimed"})," — counts of errors, producer/consumer collisions, and recovery sweeps"]}),"\n"]}),"\n",(0,n.jsx)(i.h4,{id:s[25].id,children:s[25].value}),"\n",(0,n.jsx)(i.p,{children:"Returns a human-readable string of the channel’s configuration (mode, size, segments)."}),"\n",(0,n.jsx)(i.h4,{id:s[26].id,children:s[26].value}),"\n",(0,n.jsx)(i.p,{children:"Checks protocol invariants—throws if any slot is in an illegal state. Use in development/testing, not hot production loops."}),"\n",(0,n.jsx)(i.h4,{id:s[27].id,children:s[27].value}),"\n",(0,n.jsx)(i.p,{children:"The channel can be used as an async iterator:"}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsxs)(i.code,{children:[(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"for"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" await"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" ("}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"const"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" msg"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" of"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" channel) {"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"  // receive messages until channel.close()"})}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"}"})})]})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[28].id,children:s[28].value}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["For a complete explanation of slot state machine internals—including slot lifecycle, state transitions, atomic operations, and recovery—see the ",(0,n.jsx)(i.a,{href:"/protocol-internals/slot-state-machine#quick-reference-slot-states--transitions",children:"Slot State Machine"})," documentation."]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[29].id,children:s[29].value}),"\n",(0,n.jsx)(l.U,{type:"info",title:"Best Practice",children:(0,n.jsx)(i.p,{children:"Use diagnostics in development and staging to catch protocol issues early.\nAvoid running diagnostics in hot production loops unless you need live\nmonitoring."})}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsxs)(i.code,{children:[(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"import"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" { createChannelDiagnostics } "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"from"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:' "@sp8d/diagnostics"'}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:";"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"const"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" diagnostics"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" ="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:" createChannelDiagnostics"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(channel, "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"100"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:");"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"diagnostics."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"onUpdate"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(("}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"},children:"stats"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"=>"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" {"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  console."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"log"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"("}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:'"SP8D Stats:"'}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:", stats);"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"});"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"diagnostics."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"start"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"();"})]})]})}),"\n",(0,n.jsxs)(i.p,{children:["See the ",(0,n.jsx)(i.a,{href:"/protocol-internals/architecture-overview#observability--diagnostics",children:"Diagnostics Guide →"})," for more."]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[30].id,children:s[30].value}),"\n",(0,n.jsx)(l.U,{type:"warning",title:"Gotcha",children:(0,n.jsx)(i.p,{children:"Most issues stem from mismatched buffer sizes, incorrect slot counts, or using\nthe wrong concurrency mode. Double-check your channel creation options. Common\nissues are listed below."})}),"\n",(0,n.jsx)(i.h3,{id:s[31].id,children:s[31].value}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Problem:"})," ",(0,n.jsx)(i.code,{children:"send"})," or ",(0,n.jsx)(i.code,{children:"trySend"})," always returns ",(0,n.jsx)(i.code,{children:"false"})," or throws.","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Solution:"})," Ensure the channel is not full. Check ",(0,n.jsx)(i.code,{children:"slotSize"})," and payload size. For async flows, use ",(0,n.jsx)(i.code,{children:"sendAsync"})," with a timeout."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Problem:"})," ",(0,n.jsx)(i.code,{children:"recv"}),"/",(0,n.jsx)(i.code,{children:"tryRecv"})," always returns ",(0,n.jsx)(i.code,{children:"null"}),".","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Solution:"})," The channel is empty. Confirm that producers are sending data and that you are not reading faster than writing."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Problem:"})," ",(0,n.jsx)(i.code,{children:"attachChannel"})," throws or returns an unusable channel.","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Solution:"})," Make sure the ",(0,n.jsx)(i.code,{children:"SharedArrayBuffer"})," is valid and matches the expected structure (slots, slotSize, segments)."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Problem:"})," Diagnostics report protocol errors or slot conflicts.","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Solution:"})," Check that all threads use the correct concurrency mode (SPSC, MPSC, MPMC) and that no two producers/consumers are racing in SPSC mode."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Problem:"})," Channel appears to hang or deadlock.","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Solution:"})," Avoid blocking the main thread. Use async methods and ensure all consumers/producers are running. For MPMC, ensure all parties are using unique IDs if required."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[32].id,children:s[32].value}),"\n",(0,n.jsx)(l.U,{type:"info",title:"Performance Checklist",children:(0,n.jsxs)(i.p,{children:["For maximum throughput, tune ",(0,n.jsx)("code",{children:"slots"})," and ",(0,n.jsx)("code",{children:"slotSize"})," to\nmatch your message rate and payload size. Use the minimal number of segments\nneeded for your concurrency model."]})}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Prefer ",(0,n.jsx)(i.code,{children:"trySend"}),"/",(0,n.jsx)(i.code,{children:"tryRecv"})," in tight loops to avoid blocking."]}),"\n",(0,n.jsxs)(i.li,{children:["Use ",(0,n.jsx)(i.code,{children:"sendAsync"}),"/",(0,n.jsx)(i.code,{children:"recvAsync"})," for backpressure-aware, event-driven flows."]}),"\n",(0,n.jsxs)(i.li,{children:["In high-concurrency scenarios, use the correct mode (",(0,n.jsx)(i.code,{children:"MPSC"})," or ",(0,n.jsx)(i.code,{children:"MPMC"}),") and avoid sharing producer/consumer IDs."]}),"\n",(0,n.jsx)(i.li,{children:"Monitor diagnostics in staging to catch contention or reclaim issues before production."}),"\n",(0,n.jsxs)(i.li,{children:["Avoid frequent ",(0,n.jsx)(i.code,{children:"reset()"})," in production; use it for test harnesses or controlled recovery only."]}),"\n",(0,n.jsxs)(i.li,{children:["For lowest latency, keep ",(0,n.jsx)(i.code,{children:"sweepTimeoutMs"})," low, but not zero—test for your workload."]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[33].id,children:s[33].value}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/quickstart/common-recipes",children:"Common Recipes"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/protocol-internals/architecture-overview",children:"Protocol Architecture Overview"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/principles/fairness-backpressure",children:"Fairness & Backpressure"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/guides-and-howtos/faqs",children:"FAQ & Troubleshooting"})}),"\n"]})]})},"/api-reference/channel-api",{filePath:"pages/api-reference/channel-api.mdx",timestamp:174780741e4,pageMap:a.v,frontMatter:{title:"SP8D Channel API Reference: Lock-Free Messaging for JavaScript & Node.js",description:"Comprehensive SP8D Channel API reference for JavaScript and Node.js. Learn methods, options, diagnostics, troubleshooting, and best practices for lock-free, real-time, high-performance messaging.",keywords:["SP8D API","channel API","JavaScript","Node.js","lock-free messaging","diagnostics","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/api-reference/channel-api"},title:"SP8D Channel API Reference: Lock-Free Messaging for JavaScript & Node.js"},"undefined"==typeof RemoteContent?c:RemoteContent.useTOC)},5956:function(e,s,i){"use strict";i.d(s,{U:function(){return o}});var n=i(5893),r=i(512),a=i(5192);let t={default:"\uD83D\uDCA1",error:"\uD83D\uDEAB",info:(0,n.jsx)(a.AV,{className:"_mt-1"}),warning:"⚠️"},l={default:(0,r.Z)("_border-orange-100 _bg-orange-50 _text-orange-800 dark:_border-orange-400/30 dark:_bg-orange-400/20 dark:_text-orange-300"),error:(0,r.Z)("_border-red-200 _bg-red-100 _text-red-900 dark:_border-red-200/30 dark:_bg-red-900/30 dark:_text-red-200"),info:(0,r.Z)("_border-blue-200 _bg-blue-100 _text-blue-900 dark:_border-blue-200/30 dark:_bg-blue-900/30 dark:_text-blue-200"),warning:(0,r.Z)("_border-yellow-100 _bg-yellow-50 _text-yellow-900 dark:_border-yellow-200/30 dark:_bg-yellow-700/30 dark:_text-yellow-200")};function o({children:e,type:s="default",emoji:i=t[s]}){return(0,n.jsxs)("div",{className:(0,r.Z)("nextra-callout _overflow-x-auto _mt-6 _flex _rounded-lg _border _py-2 ltr:_pr-4 rtl:_pl-4","contrast-more:_border-current contrast-more:dark:_border-current",l[s]),children:[(0,n.jsx)("div",{className:"_select-none _text-xl ltr:_pl-3 ltr:_pr-2 rtl:_pr-3 rtl:_pl-2",style:{fontFamily:'"Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"'},children:i}),(0,n.jsx)("div",{className:"_w-full _min-w-0 _leading-7",children:e})]})}},1293:function(e,s,i){"use strict";i.d(s,{v:function(){return n}});let n=[{data:{index:"Home",introduction:"Introduction",quickstart:"Quickstart",principles:"Principles","protocol-internals":"Protocol Internals","api-reference":"API Reference","guides-and-howtos":"Guides and How-Tos",examples:"Examples",testHarness:{title:"Test Harness",type:"page",href:"https://harness.sp8d.com",newWindow:!0},contact:{title:"Contact",type:"page",href:"mailto:admin@sp8d.com",newWindow:!0}}},{name:"api-reference",route:"/api-reference",children:[{data:{"channel-api":{title:"Channel API"}}},{name:"channel-api",route:"/api-reference/channel-api",frontMatter:{title:"SP8D Channel API Reference: Lock-Free Messaging for JavaScript & Node.js",description:"Comprehensive SP8D Channel API reference for JavaScript and Node.js. Learn methods, options, diagnostics, troubleshooting, and best practices for lock-free, real-time, high-performance messaging.",keywords:["SP8D API","channel API","JavaScript","Node.js","lock-free messaging","diagnostics","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/api-reference/channel-api"}}]},{name:"examples",route:"/examples",children:[{data:{"basic-spsc":{title:"Basic SPSC"},"scalable-mpmc":{title:"Scalable MPMC"}}},{name:"basic-spsc",route:"/examples/basic-spsc",frontMatter:{title:"SP8D SPSC Example: Single-Producer Single-Consumer in JavaScript & Node.js",description:"Step-by-step SP8D SPSC example for JavaScript and Node.js. Learn how to implement ultra-low-latency, lock-free single-producer single-consumer channels for high-performance messaging.",keywords:["SP8D example","SPSC","single-producer single-consumer","lock-free queue","JavaScript","Node.js","concurrency","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/examples/basic-spsc"}},{name:"scalable-mpmc",route:"/examples/scalable-mpmc",frontMatter:{title:"SP8D Example: Scalable MPMC (Placeholder)",description:"Placeholder for Scalable MPMC example documentation."}}]},{name:"guides-and-howtos",route:"/guides-and-howtos",children:[{data:{troubleshooting:{title:"Troubleshooting"},faqs:{title:"FAQs"}}},{name:"faqs",route:"/guides-and-howtos/faqs",frontMatter:{title:"SP8D FAQ: Troubleshooting, Diagnostics & Concurrency in JavaScript & Node.js",description:"Frequently asked questions about SP8D: browser support, diagnostics, backpressure, async iteration, and troubleshooting for high-performance JavaScript and Node.js messaging.",keywords:["SP8D FAQ","troubleshooting","browser support","diagnostics","backpressure","async iteration","concurrency","JavaScript","Node.js","high-performance messaging"],canonical:"https://sp8d.github.io/guides-and-howtos/faqs"}},{name:"troubleshooting",route:"/guides-and-howtos/troubleshooting",frontMatter:{title:"SP8D Troubleshooting Guide: Buffer Full, Starvation, Diagnostics",description:"In-depth troubleshooting for SP8D: persistent buffer full, starvation, unfair access, and advanced diagnostics. Step-by-step solutions for JavaScript & Node.js.",keywords:["SP8D troubleshooting","buffer full","starvation","diagnostics","fairness","JavaScript","Node.js","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/guides-and-howtos/troubleshooting"}}]},{name:"index",route:"/",frontMatter:{title:"SP8D: Ultra-Low-Latency Lock-Free Channels for JavaScript & Node.js",description:"Discover SP8D, the fastest lock-free, observable protocol for real-time, cross-thread communication in JavaScript and Node.js. Learn features, use cases, and how to get started with high-performance messaging.",keywords:["SP8D","lock-free channels","real-time messaging","AI concurrency","browser communication","SharedArrayBuffer","Atomics","multi-agent","diagnostics","JavaScript","Node.js","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/"}},{name:"introduction",route:"/introduction",children:[{data:{"what-is-sp8d":{title:"What is SP8D"}}},{name:"what-is-sp8d",route:"/introduction/what-is-sp8d",frontMatter:{title:"What is SP8D? Lock-Free Real-Time Messaging for JavaScript & Node.js",description:"Learn what makes SP8D the best lock-free, high-performance protocol for real-time, observable data transfer in JavaScript and Node.js. Ideal for AI, finance, and multi-agent apps.",keywords:["SP8D","what is SP8D","lock-free protocol","real-time data","browser concurrency","AI messaging","Node.js","SharedArrayBuffer","diagnostics","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/introduction/what-is-sp8d"}}]},{name:"principles",route:"/principles",children:[{data:{"concurrency-models":{title:"Concurrency Models"},"fairness-backpressure":{title:"Fairness & Backpressure"}}},{name:"concurrency-models",route:"/principles/concurrency-models",frontMatter:{title:"SP8D Concurrency Models: SPSC, MPSC, MPMC Explained for JavaScript & Node.js",description:"Master SP8D concurrency models—SPSC, MPSC, and MPMC—for high-performance, lock-free communication in JavaScript and Node.js. Compare patterns, use cases, and implementation tips to optimize your multi-threaded apps.",keywords:["SP8D concurrency","SPSC","MPSC","MPMC","concurrency models","lock-free","multi-threading","JavaScript","Node.js","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/principles/concurrency-models"}},{name:"fairness-backpressure",route:"/principles/fairness-backpressure",frontMatter:{title:"SP8D Principles: Fairness & Backpressure",description:"Understand fairness and backpressure in SP8D: how the protocol ensures robust, lock-free messaging, prevents starvation, and handles full/empty buffers. Best practices, diagrams, and troubleshooting for JavaScript & Node.js.",keywords:["SP8D fairness","backpressure","lock-free messaging","starvation prevention","buffer full","JavaScript","Node.js","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/principles/fairness-backpressure"}}]},{name:"protocol-internals",route:"/protocol-internals",children:[{data:{"architecture-overview":{title:"Architecture Overview"},"slot-state-machine":{title:"Slot State Machine"},"gen-cycle-byte":{title:"Gen Cycle Byte"}}},{name:"architecture-overview",route:"/protocol-internals/architecture-overview",frontMatter:{title:"SP8D Protocol Internals: Architecture Overview",description:"A high-level, visual, and practical overview of the SP8D protocol architecture, data flow, and slot state machine for implementers and advanced users.",keywords:["SP8D architecture","protocol internals","lock-free messaging","slot state machine","diagnostics","JavaScript","Node.js","high-performance messaging"],canonical:"https://sp8d.github.io/protocol-internals/architecture-overview"}},{name:"gen-cycle-byte",route:"/protocol-internals/gen-cycle-byte",frontMatter:{title:"SP8D Protocol Internals: Gen-Cycle Byte (Placeholder)",description:"Placeholder for Gen-Cycle Byte documentation."}},{name:"slot-state-machine",route:"/protocol-internals/slot-state-machine",frontMatter:{title:"SP8D Protocol Internals: Slot State Machine",description:"Deep dive into the SP8D slot state machine: lifecycle, transitions, fairness, and recovery. Visual diagrams and best practices for implementers and advanced users."}}]},{name:"quickstart",route:"/quickstart",children:[{data:{installation:{title:"Installation"},"minimal-example":{title:"Minimal Example"},"common-recipes":{title:"Common Recipes"}}},{name:"common-recipes",route:"/quickstart/common-recipes",frontMatter:{title:"SP8D Recipes: Integration Patterns for JavaScript & Node.js",description:"Common SP8D integration patterns and recipes for JavaScript and Node.js. Learn browser, Node.js, and AI/ML workflows with code samples and diagrams for high-performance messaging.",keywords:["SP8D recipes","integration patterns","JavaScript","Node.js","AI messaging","browser workers","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/quickstart/common-recipes"}},{name:"installation",route:"/quickstart/installation",frontMatter:{title:"Install SP8D: Quickstart Guide for JavaScript & Node.js",description:"How to install SP8D for ultra-fast, lock-free cross-thread communication in JavaScript and Node.js. Step-by-step requirements, setup, and troubleshooting for high-performance messaging.",keywords:["SP8D installation","quickstart","JavaScript","Node.js","SharedArrayBuffer","Atomics","setup guide","high-performance messaging"],canonical:"https://sp8d.github.io/quickstart/installation"}},{name:"minimal-example",route:"/quickstart/minimal-example",frontMatter:{title:"SP8D Minimal Example: Lock-Free Messaging in JavaScript & Node.js",description:"Minimal working SP8D example for real-time, lock-free messaging in JavaScript and Node.js. Copy-paste code for instant high-performance results.",keywords:["SP8D minimal example","quickstart","JavaScript","Node.js","lock-free messaging","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/quickstart/minimal-example"}}]}]}},function(e){e.O(0,[7812,2888,9774,179],function(){return e(e.s=112)}),_N_E=e.O()}]);