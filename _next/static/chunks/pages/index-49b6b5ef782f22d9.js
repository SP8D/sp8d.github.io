(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5405],{1464:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return i(1104)}])},1104:function(e,n,i){"use strict";i.r(n),i.d(n,{useTOC:function(){return d}});var r=i(5893),s=i(7812),a=i(1937),t=i(9299),o=i(8757),l=i(5956),c=i(5192);function d(e){return[{value:"What is SP8D?",id:"what-is-sp8d",depth:2},{value:"Instant Hello World (Browser/Node)",id:"instant-hello-world-browsernode",depth:2},{value:"Why SP8D?",id:"why-sp8d",depth:2},{value:"Where to Go Next",id:"where-to-go-next",depth:2},{value:"Architecture at a Glance",id:"architecture-at-a-glance",depth:2},{value:"Get Involved \uD83D\uDC4B",id:"get-involved-",depth:2}]}n.default=(0,s.c)(function(e){let{toc:n=d(e)}=e,i={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"SP8D is the leading open-source solution for ultra-low-latency, lock-free, real-time messaging and cross-thread communication in JavaScript and Node.js. Built for demanding AI, finance, and multi-agent applications, SP8D delivers blazing-fast, observable, and reliable data transfer for modern web and server environments."}),"\n",(0,r.jsx)(i.h1,{children:"SP8D: Ultra-Low-Latency Lock-Free Channels for JavaScript & Node.js"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"The world’s first radically observable, lock-free, bounded protocol for cross-thread communication in browsers — designed for next-generation AI copilots, trading platforms, and multi-agent applications."})}),"\n"]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:n[0].id,children:n[0].value}),"\n",(0,r.jsx)(l.U,{type:"info",title:"What is SP8D?",children:(0,r.jsx)(i.p,{children:"The world’s first radically observable, lock-free, bounded protocol for\ncross-thread communication in browsers — designed for next-generation AI\ncopilots, trading platforms, and multi-agent applications."})}),"\n",(0,r.jsx)(i.p,{children:"SP8D is a breakthrough communication core for demanding front-end and AI workloads:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Blazing-fast, lock-free, slot-based communication"})," via SharedArrayBuffer and atomics"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Truly bounded and backpressure-driven"}),", with guaranteed “never drop, never leak, never stall”"]}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.strong,{children:"Battle-tested for real-time trading, ML agents, and browser-native concurrency"})}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Radically observable"}),": live diagnostics, transparency, and no more guessing why your system slowed down"]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Whether you’re wiring up AI copilots, streaming market data, or building the next layer of browser-native intelligence—SP8D gives you tools, proof, and performance the rest of the ecosystem can’t match."}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:n[1].id,children:n[1].value}),"\n",(0,r.jsx)(l.U,{type:"info",title:"Instant Hello World",children:(0,r.jsx)(i.p,{children:"Try SP8D instantly in your browser or Node.js with this minimal example."})}),"\n",(0,r.jsx)(i.pre,{icon:c.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-filename":"hello-sp8d.ts","data-copy":"",children:(0,r.jsxs)(i.code,{"data-line-numbers":"","data-line-numbers-max-digits":"2",children:[(0,r.jsxs)(i.span,{children:[(0,r.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"import"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" { createChannel } "}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"from"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:' "@sp8d/core"'}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:";"})]}),"\n",(0,r.jsx)(i.span,{children:" "}),"\n",(0,r.jsxs)(i.span,{children:[(0,r.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"const"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" { "}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"channel"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" } "}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"="}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:" createChannel"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"({ slots: "}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"8"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:", slotSize: "}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"64"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" }); "}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// SPSC mode by default"})]}),"\n",(0,r.jsx)(i.span,{children:" "}),"\n",(0,r.jsx)(i.span,{children:(0,r.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// Producer"})}),"\n",(0,r.jsxs)(i.span,{children:[(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"channel."}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"send"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"("}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"new"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:" Uint8Array"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(["}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"1"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:", "}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"2"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:", "}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"3"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"]));"})]}),"\n",(0,r.jsx)(i.span,{children:" "}),"\n",(0,r.jsx)(i.span,{children:(0,r.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// Consumer"})}),"\n",(0,r.jsxs)(i.span,{children:[(0,r.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"const"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" msg"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:":"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:" Uint8Array"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" |"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" undefined"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" ="}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" channel."}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"recv"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(); "}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// Uint8Array([1, 2, 3])"})]}),"\n",(0,r.jsxs)(i.span,{children:[(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"console."}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"log"}),(0,r.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(msg);"})]})]})}),"\n",(0,r.jsx)("sub",{children:(0,r.jsxs)(i.p,{children:["→ See ",(0,r.jsx)(i.a,{href:"/quickstart/common-recipes",children:"SP8D Quickstart Recipes for Browser\nWorkers"})," for drop-in examples."]})}),"\n",(0,r.jsx)(i.h2,{id:n[2].id,children:n[2].value}),"\n",(0,r.jsx)(i.p,{children:"Tired of slow, memory-leaky, or debugging-nightmare message passing?\nNeed guaranteed low-latency, fairness, and traceability under stress?\nBuilding for regulated, high-stakes domains (finance, AI/ML, ops, browser concurrency)?\nSP8D is designed for you."}),"\n",(0,r.jsx)(i.h2,{id:n[3].id,children:n[3].value}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"/quickstart/installation",children:"SP8D Quickstart Guide: Install, run and win in 5 minutes"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"/quickstart/minimal-example",children:"Minimal Working Example: Copy, paste, and run instantly"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"/api-reference/channel-api",children:"SP8D Channel API Reference: Every method, every prop explained"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"/principles/concurrency-models",children:"Concurrency Models: SPSC, MPSC, MPMC at a glance"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"/guides-and-howtos/faqs#general",children:"SP8D FAQ & Troubleshooting: “Why isn’t my message arriving?” and more"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"/examples/basic-spsc",children:"Live Diagnostics & Benchmarking: Benchmark and observe SP8D live in your production environment"})}),"\n",(0,r.jsx)(i.li,{children:"Real-World Use Cases & Testimonials: SP8D in action (TODO)"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:n[4].id,children:n[4].value}),"\n",(0,r.jsx)(o.G,{chart:"%% Diagram: SP8D channel architecture showing Producer, Consumer, Channel, Slots, and optional Diagnostics\\n%% Accessible description: Producer sends data to Channel, Channel receives from Producer and passes to Consumer, Channel uses Slots (SharedArrayBuffer Atomics), Diagnostics can observe Channel optionally.\\ngraph TD\\n    Producer(Producer)\\n    Consumer(Consumer)\\n    Channel(SP8D Channel)\\n    Slots(Slots SharedArrayBuffer Atomics)\\n    Diagnostics(Diagnostics optional)\\n\\n    Producer -->|send| Channel\\n    Channel -->|recv| Consumer\\n    Channel --> Slots\\n    Diagnostics -.-> Channel"}),"\n",(0,r.jsx)("figcaption",{children:(0,r.jsx)(i.p,{children:"SP8D architecture diagram: Producer, Consumer, Channel, Slots\n(SharedArrayBuffer Atomics), and optional Diagnostics. (Diagram is accessible\nfor screen readers.)"})}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsx)(i.p,{children:(0,r.jsxs)(i.strong,{children:["For live observability, add ",(0,r.jsx)(i.a,{href:"https://www.npmjs.com/package/@sp8d/diagnostics",children:(0,r.jsx)(i.code,{children:"@sp8d/diagnostics"})})," to any channel."]})}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:n[5].id,children:n[5].value}),"\n",(0,r.jsx)(i.p,{children:"Found a bug? Ideas to expand? Want to sponsor SP8D adoption in your stack?\nContribute or open issues — all feedback and help welcome.\nWant to see the roadmap? Check our vision."}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.em,{children:"Last updated: 14 May 2025"})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsxs)(i.strong,{children:["Ready to get started? ",(0,r.jsx)(i.a,{href:"/quickstart/installation",children:"Install SP8D now →"})]})})]})},"/",{filePath:"pages/index.mdx",timestamp:1747364633e3,pageMap:a.v,frontMatter:{title:"SP8D: Ultra-Low-Latency Lock-Free Channels for JavaScript & Node.js",description:"Discover SP8D, the fastest lock-free, observable protocol for real-time, cross-thread communication in JavaScript and Node.js. Learn features, use cases, and how to get started with high-performance messaging.",keywords:["SP8D","lock-free channels","real-time messaging","AI concurrency","browser communication","SharedArrayBuffer","Atomics","multi-agent","diagnostics","JavaScript","Node.js","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/"},title:"SP8D: Ultra-Low-Latency Lock-Free Channels for JavaScript & Node.js"},"undefined"==typeof RemoteContent?d:RemoteContent.useTOC)},5956:function(e,n,i){"use strict";i.d(n,{U:function(){return l}});var r=i(5893),s=i(512),a=i(5192);let t={default:"\uD83D\uDCA1",error:"\uD83D\uDEAB",info:(0,r.jsx)(a.AV,{className:"_mt-1"}),warning:"⚠️"},o={default:(0,s.Z)("_border-orange-100 _bg-orange-50 _text-orange-800 dark:_border-orange-400/30 dark:_bg-orange-400/20 dark:_text-orange-300"),error:(0,s.Z)("_border-red-200 _bg-red-100 _text-red-900 dark:_border-red-200/30 dark:_bg-red-900/30 dark:_text-red-200"),info:(0,s.Z)("_border-blue-200 _bg-blue-100 _text-blue-900 dark:_border-blue-200/30 dark:_bg-blue-900/30 dark:_text-blue-200"),warning:(0,s.Z)("_border-yellow-100 _bg-yellow-50 _text-yellow-900 dark:_border-yellow-200/30 dark:_bg-yellow-700/30 dark:_text-yellow-200")};function l({children:e,type:n="default",emoji:i=t[n]}){return(0,r.jsxs)("div",{className:(0,s.Z)("nextra-callout _overflow-x-auto _mt-6 _flex _rounded-lg _border _py-2 ltr:_pr-4 rtl:_pl-4","contrast-more:_border-current contrast-more:dark:_border-current",o[n]),children:[(0,r.jsx)("div",{className:"_select-none _text-xl ltr:_pl-3 ltr:_pr-2 rtl:_pr-3 rtl:_pl-2",style:{fontFamily:'"Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"'},children:i}),(0,r.jsx)("div",{className:"_w-full _min-w-0 _leading-7",children:e})]})}},8757:function(e,n,i){"use strict";i.d(n,{G:function(){return a}});var r=i(5893),s=i(7294);function a({chart:e}){let n=(0,s.useId)(),[a,t]=(0,s.useState)(""),o=(0,s.useRef)(null),l=function(e){let[n,i]=(0,s.useState)(!1);return(0,s.useEffect)(()=>{let n=new IntersectionObserver(([e])=>{e.isIntersecting&&(n.disconnect(),i(!0))});return n.observe(e.current),()=>{n.disconnect()}},[e]),n}(o);return(0,s.useEffect)(()=>{if(!l)return;let r=document.documentElement,s=new MutationObserver(a);return s.observe(r,{attributes:!0}),a(),()=>{s.disconnect()};async function a(){let s=r.classList.contains("dark")||r.attributes.getNamedItem("data-theme")?.value==="dark",{default:a}=await Promise.all([i.e(6925),i.e(2858)]).then(i.bind(i,2858));try{a.initialize({startOnLoad:!1,securityLevel:"loose",fontFamily:"inherit",themeCSS:"margin: 1.5rem auto 0;",theme:s?"dark":"default"});let{svg:i}=await a.render(n.replaceAll(":",""),e.replaceAll("\\n","\n"),o.current);t(i)}catch(e){console.error("Error while rendering mermaid",e)}}},[e,l]),(0,r.jsx)("div",{ref:o,dangerouslySetInnerHTML:{__html:a}})}},1937:function(e,n,i){"use strict";i.d(n,{v:function(){return r}});let r=[{data:{index:"Home",introduction:"Introduction",quickstart:"Quickstart",principles:"Principles","api-reference":"API Reference","guides-and-howtos":"Guides and How-Tos",examples:"Examples",testHarness:{title:"Test Harness",type:"page",href:"https://harness.sp8d.com",newWindow:!0},contact:{title:"Contact",type:"page",href:"mailto:admin@sp8d.com",newWindow:!0}}},{name:"api-reference",route:"/api-reference",children:[{data:{"channel-api":{title:"Channel API"}}},{name:"channel-api",route:"/api-reference/channel-api",frontMatter:{title:"SP8D Channel API Reference: Lock-Free Messaging for JavaScript & Node.js",description:"Comprehensive SP8D Channel API reference for JavaScript and Node.js. Learn methods, options, diagnostics, troubleshooting, and best practices for lock-free, real-time, high-performance messaging.",keywords:["SP8D API","channel API","JavaScript","Node.js","lock-free messaging","diagnostics","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/api-reference/channel-api"}}]},{name:"examples",route:"/examples",children:[{data:{"basic-spsc":{title:"Basic SPSC"}}},{name:"basic-spsc",route:"/examples/basic-spsc",frontMatter:{title:"SP8D SPSC Example: Single-Producer Single-Consumer in JavaScript & Node.js",description:"Step-by-step SP8D SPSC example for JavaScript and Node.js. Learn how to implement ultra-low-latency, lock-free single-producer single-consumer channels for high-performance messaging.",keywords:["SP8D example","SPSC","single-producer single-consumer","lock-free queue","JavaScript","Node.js","concurrency","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/examples/basic-spsc"}}]},{name:"guides-and-howtos",route:"/guides-and-howtos",children:[{data:{faqs:{title:"FAQs"}}},{name:"faqs",route:"/guides-and-howtos/faqs",frontMatter:{title:"SP8D FAQ: Troubleshooting, Diagnostics & Concurrency in JavaScript & Node.js",description:"Frequently asked questions about SP8D: browser support, diagnostics, backpressure, async iteration, and troubleshooting for high-performance JavaScript and Node.js messaging.",keywords:["SP8D FAQ","troubleshooting","browser support","diagnostics","backpressure","async iteration","concurrency","JavaScript","Node.js","high-performance messaging"],canonical:"https://sp8d.github.io/guides-and-howtos/faqs"}}]},{name:"index",route:"/",frontMatter:{title:"SP8D: Ultra-Low-Latency Lock-Free Channels for JavaScript & Node.js",description:"Discover SP8D, the fastest lock-free, observable protocol for real-time, cross-thread communication in JavaScript and Node.js. Learn features, use cases, and how to get started with high-performance messaging.",keywords:["SP8D","lock-free channels","real-time messaging","AI concurrency","browser communication","SharedArrayBuffer","Atomics","multi-agent","diagnostics","JavaScript","Node.js","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/"}},{name:"introduction",route:"/introduction",children:[{data:{"what-is-sp8d":{title:"What is SP8D"}}},{name:"what-is-sp8d",route:"/introduction/what-is-sp8d",frontMatter:{title:"What is SP8D? Lock-Free Real-Time Messaging for JavaScript & Node.js",description:"Learn what makes SP8D the best lock-free, high-performance protocol for real-time, observable data transfer in JavaScript and Node.js. Ideal for AI, finance, and multi-agent apps.",keywords:["SP8D","what is SP8D","lock-free protocol","real-time data","browser concurrency","AI messaging","Node.js","SharedArrayBuffer","diagnostics","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/introduction/what-is-sp8d"}}]},{name:"principles",route:"/principles",children:[{data:{"concurrency-models":{title:"Concurrency Models"}}},{name:"concurrency-models",route:"/principles/concurrency-models",frontMatter:{title:"SP8D Concurrency Models: SPSC, MPSC, MPMC Explained for JavaScript & Node.js",description:"Master SP8D concurrency models—SPSC, MPSC, and MPMC—for high-performance, lock-free communication in JavaScript and Node.js. Compare patterns, use cases, and implementation tips to optimize your multi-threaded apps.",keywords:["SP8D concurrency","SPSC","MPSC","MPMC","concurrency models","lock-free","multi-threading","JavaScript","Node.js","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/principles/concurrency-models"}}]},{name:"quickstart",route:"/quickstart",children:[{data:{installation:{title:"Installation"},"minimal-example":{title:"Minimal Example"},"common-recipes":{title:"Common Recipes"}}},{name:"common-recipes",route:"/quickstart/common-recipes",frontMatter:{title:"SP8D Recipes: Integration Patterns for JavaScript & Node.js",description:"Common SP8D integration patterns and recipes for JavaScript and Node.js. Learn browser, Node.js, and AI/ML workflows with code samples and diagrams for high-performance messaging.",keywords:["SP8D recipes","integration patterns","JavaScript","Node.js","AI messaging","browser workers","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/quickstart/common-recipes"}},{name:"installation",route:"/quickstart/installation",frontMatter:{title:"Install SP8D: Quickstart Guide for JavaScript & Node.js",description:"How to install SP8D for ultra-fast, lock-free cross-thread communication in JavaScript and Node.js. Step-by-step requirements, setup, and troubleshooting for high-performance messaging.",keywords:["SP8D installation","quickstart","JavaScript","Node.js","SharedArrayBuffer","Atomics","setup guide","high-performance messaging"],canonical:"https://sp8d.github.io/quickstart/installation"}},{name:"minimal-example",route:"/quickstart/minimal-example",frontMatter:{title:"SP8D Minimal Example: Lock-Free Messaging in JavaScript & Node.js",description:"Minimal working SP8D example for real-time, lock-free messaging in JavaScript and Node.js. Copy-paste code for instant high-performance results.",keywords:["SP8D minimal example","quickstart","JavaScript","Node.js","lock-free messaging","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/quickstart/minimal-example"}}]}]}},function(e){e.O(0,[7812,2888,9774,179],function(){return e(e.s=1464)}),_N_E=e.O()}]);