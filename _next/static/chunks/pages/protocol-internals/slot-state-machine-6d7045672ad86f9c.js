(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9548],{9061:function(e,s,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/protocol-internals/slot-state-machine",function(){return i(906)}])},906:function(e,s,i){"use strict";i.r(s),i.d(s,{useTOC:function(){return h}});var n=i(5893),t=i(7812),r=i(6024),a=i(9299),l=i(8757),d=i(5956),o=i(5192);function h(e){return[{value:"Quick Reference: Slot States & Transitions",id:"quick-reference-slot-states--transitions",depth:2},{value:"What is a Slot?",id:"what-is-a-slot",depth:2},{value:"Slot Lifecycle & State Transitions",id:"slot-lifecycle--state-transitions",depth:2},{value:"Visual: Message Flow Through the Slot State Machine",id:"visual-message-flow-through-the-slot-state-machine",depth:2},{value:"Step-by-Step: State Transitions in Code",id:"step-by-step-state-transitions-in-code",depth:2},{value:"State Definitions",id:"state-definitions",depth:2},{value:"Atomic Operations & Fairness",id:"atomic-operations--fairness",depth:2},{value:"Sweeper: Automatic Recovery",id:"sweeper-automatic-recovery",depth:2},{value:"Visual: Slot Array Anatomy",id:"visual-slot-array-anatomy",depth:2},{value:"Best Practices & Gotchas",id:"best-practices--gotchas",depth:2},{value:"Advanced Scenarios: Multi-Segment, MPMC, and Contention",id:"advanced-scenarios-multi-segment-mpmc-and-contention",depth:2},{value:"Troubleshooting",id:"troubleshooting",depth:2},{value:"Troubleshooting & Debugging Checklist",id:"troubleshooting--debugging-checklist",depth:2},{value:"Sweeper & Recovery: Flowchart and Checklist",id:"sweeper--recovery-flowchart-and-checklist",depth:2},{value:"Reference Implementation: Annotated Code",id:"reference-implementation-annotated-code",depth:2},{value:"Where to Go Next",id:"where-to-go-next",depth:2}]}s.default=(0,t.c)(function(e){let{toc:s=h(e)}=e,i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",hr:"hr",input:"input",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:"SP8D’s slot state machine is the engine that powers its lock-free, high-performance message passing. This page provides a deep, practical, and visual guide to the slot lifecycle, state transitions, fairness, and recovery—essential for advanced users, implementers, and anyone extending or debugging the protocol."}),"\n",(0,n.jsx)(i.h1,{children:"Slot State Machine: The Heart of SP8D"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)("strong",{children:"Who should read this?"})," Advanced users, protocol implementers, and\nanyone debugging or extending SP8D internals. This page is your canonical, up-to-date\nreference for the slot state machine: the core of SP8D’s lock-free protocol."]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[0].id,children:s[0].value}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"State"}),(0,n.jsx)(i.th,{children:"Code Value"}),(0,n.jsx)(i.th,{children:"Description"}),(0,n.jsx)(i.th,{children:"Allowed Transitions"}),(0,n.jsx)(i.th,{children:"Atomic Operation"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Empty"}),(0,n.jsx)(i.td,{children:"0"}),(0,n.jsx)(i.td,{children:"Slot is available for claim"}),(0,n.jsx)(i.td,{children:"→ Claimed"}),(0,n.jsx)(i.td,{children:"CAS (Producer)"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Claimed"}),(0,n.jsx)(i.td,{children:"1"}),(0,n.jsx)(i.td,{children:"Slot is being written/read"}),(0,n.jsx)(i.td,{children:"→ Ready, → Empty"}),(0,n.jsx)(i.td,{children:"CAS (Producer/Consumer/Sweeper)"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Ready"}),(0,n.jsx)(i.td,{children:"2"}),(0,n.jsx)(i.td,{children:"Slot contains a message"}),(0,n.jsx)(i.td,{children:"→ Claimed"}),(0,n.jsx)(i.td,{children:"CAS (Consumer)"})]})]})]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)("strong",{children:"CAS"}),": Compare-and-swap via ",(0,n.jsx)("code",{children:"Atomics.compareExchange"})]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)("strong",{children:"Generation Tag"}),": Incremented on reclaim/wraparound to prevent\n",(0,n.jsx)("a",{href:"/guides-and-howtos/faqs#what-is-the-aba-problem",children:"ABA problems"})," and\nenables safe wraparound ABA"]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[1].id,children:s[1].value}),"\n",(0,n.jsxs)(i.p,{children:["A ",(0,n.jsx)(i.strong,{children:"slot"})," is a fixed-size region in the shared buffer that holds a single message. Each slot has:"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Status"}),": Empty, Claimed, or Ready"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Generation (Cycle) Tag"}),": Prevents ABA problems and enables safe wraparound"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Claim Timestamp"}),": For diagnostics and recovery"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Payload"}),": The actual message data"]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[2].id,children:s[2].value}),"\n",(0,n.jsx)(l.G,{chart:"stateDiagram-v2\\n    [*] --> Empty\\n    Empty --> Claimed: Producer claims slot (CAS)\\n    Claimed --> Ready: Producer writes payload, marks ready\\n    Ready --> Claimed: Consumer claims for reading (CAS)\\n    Claimed --> Empty: Consumer reads, marks empty (generation++)\\n    Claimed --> Empty: Sweeper reclaims stuck slot (timeout)"}),"\n",(0,n.jsx)("sub",{className:"diagram-caption","aria-label":"Diagram: Slot state machine. Transitions between Empty, Claimed, and Ready, with atomic operations and sweeper recovery.",children:(0,n.jsxs)(i.p,{children:[(0,n.jsx)("strong",{children:"Diagram:"})," Slot state machine: transitions between Empty,\nClaimed, and Ready, with atomic operations and sweeper recovery."]})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[3].id,children:s[3].value}),"\n",(0,n.jsx)(l.G,{chart:"sequenceDiagram\\n    participant Producer\\n    participant Slot\\n    participant Consumer\\n    participant Sweeper\\n    Producer->>Slot: Claim (CAS)\\n    Producer->>Slot: Write Payload\\n    Producer->>Slot: Mark Ready\\n    Consumer->>Slot: Claim for Read (CAS)\\n    Consumer->>Slot: Read Payload\\n    Consumer->>Slot: Mark Empty (generation++)\\n    Sweeper-->>Slot: Reclaim (timeout)"}),"\n",(0,n.jsx)("sub",{className:"diagram-caption","aria-label":"Diagram: Step-by-step message flow. Producer claims and writes, consumer claims and reads, sweeper reclaims if needed.",children:(0,n.jsxs)(i.p,{children:[(0,n.jsx)("strong",{children:"Diagram:"})," Step-by-step message flow: producer claims and\nwrites, consumer claims and reads, sweeper reclaims if needed."]})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[4].id,children:s[4].value}),"\n",(0,n.jsxs)(i.p,{children:["Below is a simplified TypeScript walkthrough of the slot state machine, based on the actual ",(0,n.jsx)("code",{children:"sp8d-core.ts"})," implementation:"]}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsxs)(i.code,{"data-line-numbers":"","data-line-numbers-max-digits":"2",children:[(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// Pseudocode for slot state transitions"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"function"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:" producerClaim"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"("}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"},children:"slot"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") {"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"  // Atomically claim an empty slot"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"  if"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" (Atomics."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"compareExchange"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(slot.status, "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"0"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:", "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"1"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"==="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" 0"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") {"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"    // Write payload, set ready"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"    slot.payload "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" ..."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:";"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"    Atomics."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"store"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(slot.status, "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"2"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"); "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// Ready"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  }"})}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"}"})}),"\n",(0,n.jsx)(i.span,{children:" "}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"function"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:" consumerClaim"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"("}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"},children:"slot"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") {"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"  // Atomically claim a ready slot"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"  if"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" (Atomics."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"compareExchange"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(slot.status, "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"2"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:", "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"1"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"==="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" 2"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") {"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"    // Read payload, mark empty and increment generation"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"    const"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" data"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" ="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" slot.payload;"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"    slot.generation"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"++"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:";"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"    Atomics."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"store"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(slot.status, "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"0"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"); "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// Empty"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"    return"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" data;"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  }"})}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"}"})}),"\n",(0,n.jsx)(i.span,{children:" "}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"function"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:" sweeperReclaim"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"("}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"},children:"slot"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:", "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"},children:"now"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") {"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"  // If slot is stuck in Claimed too long, reclaim"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"  if"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" (slot.status "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"==="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" 1"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" &&"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" now "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"-"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" slot.claimTimestamp "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:">"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" sweepTimeoutMs) {"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"    slot.generation"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"++"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:";"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"    Atomics."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"store"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(slot.status, "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"0"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"); "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// Empty"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"    // Update diagnostics"})}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  }"})}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"}"})})]})}),"\n",(0,n.jsx)(d.U,{type:"warning",title:"Best Practice",children:(0,n.jsxs)(i.p,{children:["Always use atomic operations for state transitions. Never write directly to"," ","\n",(0,n.jsx)("code",{children:"status"})," except via ",(0,n.jsx)("code",{children:"Atomics"}),"."]})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[5].id,children:s[5].value}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsxs)(i.strong,{children:["Empty (",(0,n.jsx)(i.code,{children:"STATUS_EMPTY = 0"}),")"]}),": Slot is available for a producer to claim."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsxs)(i.strong,{children:["Claimed (",(0,n.jsx)(i.code,{children:"STATUS_CLAIMED = 1"}),")"]}),": Slot is being written (by producer) or read (by consumer). No other agent may access."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsxs)(i.strong,{children:["Ready (",(0,n.jsx)(i.code,{children:"STATUS_READY = 2"}),")"]}),": Slot contains a message, ready for a consumer to claim."]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[6].id,children:s[6].value}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Claiming a slot"}),": Producers and consumers use ",(0,n.jsx)(i.code,{children:"Atomics.compareExchange"})," to move a slot from Empty→Claimed or Ready→Claimed, ensuring lock-free, wait-free access."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Generation Tag"}),": Incremented on each wraparound or reclaim, preventing stale reads/writes and enabling robust recovery."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Head/Tail Pointers"}),": Each segment tracks its own head (producer) and tail (consumer) for round-robin fairness."]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[7].id,children:s[7].value}),"\n",(0,n.jsxs)(i.p,{children:["If a slot is stuck in Claimed (e.g., a thread dies mid-operation), the ",(0,n.jsx)(i.strong,{children:"sweeper"})," detects and reclaims it after a timeout (",(0,n.jsx)(i.code,{children:"sweepTimeoutMs"}),"):"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Increments generation tag"}),"\n",(0,n.jsx)(i.li,{children:"Marks slot as Empty"}),"\n",(0,n.jsxs)(i.li,{children:["Updates diagnostics (",(0,n.jsx)(i.code,{children:"reclaimed"}),", ",(0,n.jsx)(i.code,{children:"errors"}),")"]}),"\n"]}),"\n",(0,n.jsx)(d.U,{type:"info",title:"Why Sweeping Matters",children:(0,n.jsx)(i.p,{children:"Without the sweeper, a single stuck thread could permanently block a slot,\nreducing throughput and breaking fairness."})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[8].id,children:s[8].value}),"\n",(0,n.jsx)(l.G,{chart:"flowchart LR\\n  subgraph Segment\\n    direction LR\\n    S0[Slot 0\\nStatus, Gen, TS, Payload]\\n    S1[Slot 1\\nStatus, Gen, TS, Payload]\\n    S2[Slot 2\\n...]\\n    S3[Slot N-1\\n...]\\n  end\\n  Head((Head Pointer))\\n  Tail((Tail Pointer))\\n  Head --writes--> S1\\n  Tail --reads--> S0"}),"\n",(0,n.jsx)("sub",{className:"diagram-caption","aria-label":"Diagram: SP8D segment ring buffer. Head points to the next slot to write, Tail to the next slot to read. Slots contain status, generation, timestamp, and payload.",children:(0,n.jsxs)(i.p,{children:[(0,n.jsx)("strong",{children:"Diagram:"})," SP8D segment ring buffer. ",(0,n.jsx)("strong",{children:"Head"})," ","\npoints to the next slot to write, ",(0,n.jsx)("strong",{children:"Tail"})," to the next slot to\nread. Slots contain status, generation, timestamp, and payload."]})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[9].id,children:s[9].value}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Never skip status transitions"}),": Always use atomic CAS for state changes."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Monitor diagnostics"}),": High ",(0,n.jsx)(i.code,{children:"conflicts"})," or ",(0,n.jsx)(i.code,{children:"reclaimed"})," counts may indicate contention or stuck agents."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsxs)(i.strong,{children:["Tune ",(0,n.jsx)(i.code,{children:"sweepTimeoutMs"})]}),": Too low may cause false reclaims; too high may delay recovery."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Use generation tags"}),": Always check generation if implementing custom consumers/producers."]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[10].id,children:s[10].value}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Multi-Segment Scaling"}),": Each segment is an independent ring buffer, enabling scalable MPSC/MPMC patterns. Producers and consumers are mapped to segments for load balancing."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Contention Handling"}),": High contention is mitigated by round-robin head/tail pointers and atomic slot claims. Monitor ",(0,n.jsx)(i.code,{children:"conflicts"})," in diagnostics to detect hotspots."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Fairness"}),": The protocol ensures round-robin fairness by advancing head/tail pointers per segment. Starvation is prevented by the sweeper and diagnostics."]}),"\n"]}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsxs)(i.code,{"data-line-numbers":"","data-line-numbers-max-digits":"1",children:[(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// Example: Mapping producer/consumer IDs to segments"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"const"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" segment"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" ="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" segments[agentId "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"%"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" segments."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"length"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"];"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// Each agent operates on its assigned segment for reduced contention"})})]})}),"\n",(0,n.jsx)(d.U,{type:"info",title:"Best Practice",children:(0,n.jsx)(i.p,{children:"For high-throughput workloads, increase the number of segments to reduce\ncontention and improve fairness."})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[11].id,children:s[11].value}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Stuck slots"}),": Check for high ",(0,n.jsx)(i.code,{children:"reclaimed"})," or ",(0,n.jsx)(i.code,{children:"errors"})," in diagnostics."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Starvation"}),": Ensure all agents are making progress; use diagnostics to detect lagging segments."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Protocol violations"}),": Use ",(0,n.jsx)(i.code,{children:".validate()"})," to check for invalid slot states or generations."]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[12].id,children:s[12].value}),"\n",(0,n.jsxs)(i.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(i.li,{className:"task-list-item",children:[(0,n.jsx)(i.input,{type:"checkbox",disabled:!0})," ",(0,n.jsx)(i.strong,{children:"Stuck slots"}),": Check diagnostics for high ",(0,n.jsx)(i.code,{children:"reclaimed"})," or ",(0,n.jsx)(i.code,{children:"errors"}),". Use ",(0,n.jsx)(i.code,{children:".validate()"})," to inspect slot states."]}),"\n",(0,n.jsxs)(i.li,{className:"task-list-item",children:[(0,n.jsx)(i.input,{type:"checkbox",disabled:!0})," ",(0,n.jsx)(i.strong,{children:"Starvation"}),": Ensure all agents are making progress; lagging segments may indicate contention or misconfiguration."]}),"\n",(0,n.jsxs)(i.li,{className:"task-list-item",children:[(0,n.jsx)(i.input,{type:"checkbox",disabled:!0})," ",(0,n.jsx)(i.strong,{children:"Protocol violations"}),": Use ",(0,n.jsx)(i.code,{children:".validate()"})," and review slot generation tags for inconsistencies."]}),"\n",(0,n.jsxs)(i.li,{className:"task-list-item",children:[(0,n.jsx)(i.input,{type:"checkbox",disabled:!0})," ",(0,n.jsx)(i.strong,{children:"Performance issues"}),": Monitor ",(0,n.jsx)(i.code,{children:"conflicts"})," and tune segment count and ",(0,n.jsx)(i.code,{children:"sweepTimeoutMs"}),"."]}),"\n",(0,n.jsxs)(i.li,{className:"task-list-item",children:[(0,n.jsx)(i.input,{type:"checkbox",disabled:!0})," ",(0,n.jsx)(i.strong,{children:"Custom extensions"}),": Always use atomic operations and check generation tags when implementing custom logic."]}),"\n"]}),"\n",(0,n.jsx)(d.U,{type:"warning",title:"Debugging Tip",children:(0,n.jsxs)(i.p,{children:["Use the diagnostics API and ",(0,n.jsx)(i.code,{children:".validate()"})," method regularly during development\nand in production monitoring."]})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[13].id,children:s[13].value}),"\n",(0,n.jsx)(l.G,{chart:"flowchart TD\\n  Start([Start]) --> CheckClaim{Slot status == Claimed?}\\n  CheckClaim -- No --> End([End])\\n  CheckClaim -- Yes --> Timeout{Timeout expired?}\\n  Timeout -- No --> End\\n  Timeout -- Yes --> Reclaim[Increment generation, mark Empty, update diagnostics]\\n  Reclaim --> End"}),"\n",(0,n.jsx)("sub",{className:"diagram-caption","aria-label":"Diagram: Sweeper flowchart. Shows how stuck slots are detected and reclaimed.",children:(0,n.jsxs)(i.p,{children:[(0,n.jsx)("strong",{children:"Diagram:"})," Sweeper flowchart: detects stuck slots and reclaims\nthem after timeout."]})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Recovery Checklist:"})}),"\n",(0,n.jsxs)(i.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(i.li,{className:"task-list-item",children:[(0,n.jsx)(i.input,{type:"checkbox",disabled:!0})," ","Monitor diagnostics for high ",(0,n.jsx)(i.code,{children:"reclaimed"})," or ",(0,n.jsx)(i.code,{children:"errors"})," counts"]}),"\n",(0,n.jsxs)(i.li,{className:"task-list-item",children:[(0,n.jsx)(i.input,{type:"checkbox",disabled:!0})," ","Tune ",(0,n.jsx)(i.code,{children:"sweepTimeoutMs"})," for your workload"]}),"\n",(0,n.jsxs)(i.li,{className:"task-list-item",children:[(0,n.jsx)(i.input,{type:"checkbox",disabled:!0})," ","Ensure generation tags increment on reclaim"]}),"\n",(0,n.jsxs)(i.li,{className:"task-list-item",children:[(0,n.jsx)(i.input,{type:"checkbox",disabled:!0})," ","Validate slot state after recovery (use ",(0,n.jsx)(i.code,{children:".validate()"}),")"]}),"\n"]}),"\n",(0,n.jsx)(d.U,{type:"warning",title:"Common Pitfall",children:(0,n.jsxs)(i.p,{children:["Setting ",(0,n.jsx)(i.code,{children:"sweepTimeoutMs"})," too low can cause false reclaims; too high can delay\nrecovery. Always test with your real workload."]})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[14].id,children:s[14].value}),"\n",(0,n.jsxs)(i.p,{children:["See the canonical implementation in ",(0,n.jsx)(i.a,{href:"https://github.com/SP8D/sp8d/blob/master/packages/core/src/sp8d-core.ts",children:(0,n.jsx)(i.code,{children:"sp8d-core.ts"})}),":"]}),"\n",(0,n.jsx)(i.pre,{icon:o.KP,tabIndex:"0","data-language":"ts","data-word-wrap":"","data-copy":"",children:(0,n.jsxs)(i.code,{"data-line-numbers":"","data-line-numbers-max-digits":"2",children:[(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// Example: Producer claim logic (simplified)"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"if"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" (Atomics."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"compareExchange"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(slot.status, "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"STATUS_EMPTY"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:", "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"STATUS_CLAIMED"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"==="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" STATUS_EMPTY"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") {"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"  // Write payload, set ready"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  slot.payload "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" ..."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:";"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  Atomics."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"store"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(slot.status, "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"STATUS_READY"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:");"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"}"})}),"\n",(0,n.jsx)(i.span,{children:" "}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"// Example: Consumer claim logic (simplified)"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"if"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" (Atomics."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"compareExchange"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(slot.status, "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"STATUS_READY"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:", "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"STATUS_CLAIMED"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"==="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" STATUS_READY"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:") {"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"},children:"  // Read payload, mark empty and increment generation"})}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"  const"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" data"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:" ="}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:" slot.payload;"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  slot.generation"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"},children:"++"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:";"})]}),"\n",(0,n.jsxs)(i.span,{children:[(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"  Atomics."}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"store"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"(slot.status, "}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:"STATUS_EMPTY"}),(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:");"})]}),"\n",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"},children:"}"})})]})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:s[15].id,children:s[15].value}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/protocol-internals/architecture-overview",children:"Protocol Architecture Overview"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/protocol-internals/gen-cycle-byte",children:"Gen-Cycle Byte"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/api-reference/channel-api",children:"Channel API Reference"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/quickstart/common-recipes",children:"Common Recipes"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/principles/fairness-backpressure",children:"Fairness & Backpressure"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/guides-and-howtos/faqs",children:"FAQ & Troubleshooting"})}),"\n"]})]})},"/protocol-internals/slot-state-machine",{filePath:"pages/protocol-internals/slot-state-machine.mdx",timestamp:1747629263e3,pageMap:r.v,frontMatter:{title:"SP8D Protocol Internals: Slot State Machine",description:"Deep dive into the SP8D slot state machine: lifecycle, transitions, fairness, and recovery. Visual diagrams and best practices for implementers and advanced users."},title:"SP8D Protocol Internals: Slot State Machine"},"undefined"==typeof RemoteContent?h:RemoteContent.useTOC)},5956:function(e,s,i){"use strict";i.d(s,{U:function(){return d}});var n=i(5893),t=i(512),r=i(5192);let a={default:"\uD83D\uDCA1",error:"\uD83D\uDEAB",info:(0,n.jsx)(r.AV,{className:"_mt-1"}),warning:"⚠️"},l={default:(0,t.Z)("_border-orange-100 _bg-orange-50 _text-orange-800 dark:_border-orange-400/30 dark:_bg-orange-400/20 dark:_text-orange-300"),error:(0,t.Z)("_border-red-200 _bg-red-100 _text-red-900 dark:_border-red-200/30 dark:_bg-red-900/30 dark:_text-red-200"),info:(0,t.Z)("_border-blue-200 _bg-blue-100 _text-blue-900 dark:_border-blue-200/30 dark:_bg-blue-900/30 dark:_text-blue-200"),warning:(0,t.Z)("_border-yellow-100 _bg-yellow-50 _text-yellow-900 dark:_border-yellow-200/30 dark:_bg-yellow-700/30 dark:_text-yellow-200")};function d({children:e,type:s="default",emoji:i=a[s]}){return(0,n.jsxs)("div",{className:(0,t.Z)("nextra-callout _overflow-x-auto _mt-6 _flex _rounded-lg _border _py-2 ltr:_pr-4 rtl:_pl-4","contrast-more:_border-current contrast-more:dark:_border-current",l[s]),children:[(0,n.jsx)("div",{className:"_select-none _text-xl ltr:_pl-3 ltr:_pr-2 rtl:_pr-3 rtl:_pl-2",style:{fontFamily:'"Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"'},children:i}),(0,n.jsx)("div",{className:"_w-full _min-w-0 _leading-7",children:e})]})}},8757:function(e,s,i){"use strict";i.d(s,{G:function(){return r}});var n=i(5893),t=i(7294);function r({chart:e}){let s=(0,t.useId)(),[r,a]=(0,t.useState)(""),l=(0,t.useRef)(null),d=function(e){let[s,i]=(0,t.useState)(!1);return(0,t.useEffect)(()=>{let s=new IntersectionObserver(([e])=>{e.isIntersecting&&(s.disconnect(),i(!0))});return s.observe(e.current),()=>{s.disconnect()}},[e]),s}(l);return(0,t.useEffect)(()=>{if(!d)return;let n=document.documentElement,t=new MutationObserver(r);return t.observe(n,{attributes:!0}),r(),()=>{t.disconnect()};async function r(){let t=n.classList.contains("dark")||n.attributes.getNamedItem("data-theme")?.value==="dark",{default:r}=await Promise.all([i.e(6925),i.e(2858)]).then(i.bind(i,2858));try{r.initialize({startOnLoad:!1,securityLevel:"loose",fontFamily:"inherit",themeCSS:"margin: 1.5rem auto 0;",theme:t?"dark":"default"});let{svg:i}=await r.render(s.replaceAll(":",""),e.replaceAll("\\n","\n"),l.current);a(i)}catch(e){console.error("Error while rendering mermaid",e)}}},[e,d]),(0,n.jsx)("div",{ref:l,dangerouslySetInnerHTML:{__html:r}})}},6024:function(e,s,i){"use strict";i.d(s,{v:function(){return n}});let n=[{data:{index:"Home",introduction:"Introduction",quickstart:"Quickstart",principles:"Principles","protocol-internals":"Protocol Internals","api-reference":"API Reference","guides-and-howtos":"Guides and How-Tos",examples:"Examples",testHarness:{title:"Test Harness",type:"page",href:"https://harness.sp8d.com",newWindow:!0},contact:{title:"Contact",type:"page",href:"mailto:admin@sp8d.com",newWindow:!0}}},{name:"api-reference",route:"/api-reference",children:[{data:{"channel-api":{title:"Channel API"}}},{name:"channel-api",route:"/api-reference/channel-api",frontMatter:{title:"SP8D Channel API Reference: Lock-Free Messaging for JavaScript & Node.js",description:"Comprehensive SP8D Channel API reference for JavaScript and Node.js. Learn methods, options, diagnostics, troubleshooting, and best practices for lock-free, real-time, high-performance messaging.",keywords:["SP8D API","channel API","JavaScript","Node.js","lock-free messaging","diagnostics","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/api-reference/channel-api"}}]},{name:"examples",route:"/examples",children:[{data:{"basic-spsc":{title:"Basic SPSC"},"scalable-mpmc":{title:"Scalable MPMC"}}},{name:"basic-spsc",route:"/examples/basic-spsc",frontMatter:{title:"SP8D SPSC Example: Single-Producer Single-Consumer in JavaScript & Node.js",description:"Step-by-step SP8D SPSC example for JavaScript and Node.js. Learn how to implement ultra-low-latency, lock-free single-producer single-consumer channels for high-performance messaging.",keywords:["SP8D example","SPSC","single-producer single-consumer","lock-free queue","JavaScript","Node.js","concurrency","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/examples/basic-spsc"}},{name:"scalable-mpmc",route:"/examples/scalable-mpmc",frontMatter:{title:"SP8D Example: Scalable MPMC (Placeholder)",description:"Placeholder for Scalable MPMC example documentation."}}]},{name:"guides-and-howtos",route:"/guides-and-howtos",children:[{data:{troubleshooting:{title:"Troubleshooting"},faqs:{title:"FAQs"}}},{name:"faqs",route:"/guides-and-howtos/faqs",frontMatter:{title:"SP8D FAQ: Troubleshooting, Diagnostics & Concurrency in JavaScript & Node.js",description:"Frequently asked questions about SP8D: browser support, diagnostics, backpressure, async iteration, and troubleshooting for high-performance JavaScript and Node.js messaging.",keywords:["SP8D FAQ","troubleshooting","browser support","diagnostics","backpressure","async iteration","concurrency","JavaScript","Node.js","high-performance messaging"],canonical:"https://sp8d.github.io/guides-and-howtos/faqs"}},{name:"troubleshooting",route:"/guides-and-howtos/troubleshooting",frontMatter:{title:"SP8D Troubleshooting Guide: Buffer Full, Starvation, Diagnostics",description:"In-depth troubleshooting for SP8D: persistent buffer full, starvation, unfair access, and advanced diagnostics. Step-by-step solutions for JavaScript & Node.js.",keywords:["SP8D troubleshooting","buffer full","starvation","diagnostics","fairness","JavaScript","Node.js","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/guides-and-howtos/troubleshooting"}}]},{name:"index",route:"/",frontMatter:{title:"SP8D: Ultra-Low-Latency Lock-Free Channels for JavaScript & Node.js",description:"Discover SP8D, the fastest lock-free, observable protocol for real-time, cross-thread communication in JavaScript and Node.js. Learn features, use cases, and how to get started with high-performance messaging.",keywords:["SP8D","lock-free channels","real-time messaging","AI concurrency","browser communication","SharedArrayBuffer","Atomics","multi-agent","diagnostics","JavaScript","Node.js","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/"}},{name:"introduction",route:"/introduction",children:[{data:{"what-is-sp8d":{title:"What is SP8D"}}},{name:"what-is-sp8d",route:"/introduction/what-is-sp8d",frontMatter:{title:"What is SP8D? Lock-Free Real-Time Messaging for JavaScript & Node.js",description:"Learn what makes SP8D the best lock-free, high-performance protocol for real-time, observable data transfer in JavaScript and Node.js. Ideal for AI, finance, and multi-agent apps.",keywords:["SP8D","what is SP8D","lock-free protocol","real-time data","browser concurrency","AI messaging","Node.js","SharedArrayBuffer","diagnostics","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/introduction/what-is-sp8d"}}]},{name:"principles",route:"/principles",children:[{data:{"concurrency-models":{title:"Concurrency Models"},"fairness-backpressure":{title:"Fairness Backpressure"}}},{name:"concurrency-models",route:"/principles/concurrency-models",frontMatter:{title:"SP8D Concurrency Models: SPSC, MPSC, MPMC Explained for JavaScript & Node.js",description:"Master SP8D concurrency models—SPSC, MPSC, and MPMC—for high-performance, lock-free communication in JavaScript and Node.js. Compare patterns, use cases, and implementation tips to optimize your multi-threaded apps.",keywords:["SP8D concurrency","SPSC","MPSC","MPMC","concurrency models","lock-free","multi-threading","JavaScript","Node.js","high-performance messaging","parallel programming"],canonical:"https://sp8d.github.io/principles/concurrency-models"}},{name:"fairness-backpressure",route:"/principles/fairness-backpressure",frontMatter:{title:"SP8D Principles: Fairness & Backpressure",description:"Understand fairness and backpressure in SP8D: how the protocol ensures robust, lock-free messaging, prevents starvation, and handles full/empty buffers. Best practices, diagrams, and troubleshooting for JavaScript & Node.js.",keywords:["SP8D fairness","backpressure","lock-free messaging","starvation prevention","buffer full","JavaScript","Node.js","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/principles/fairness-backpressure"}}]},{name:"protocol-internals",route:"/protocol-internals",children:[{data:{"architecture-overview":{title:"Architecture Overview"},"slot-state-machine":{title:"Slot State Machine"},"gen-cycle-byte":{title:"Gen Cycle Byte"}}},{name:"architecture-overview",route:"/protocol-internals/architecture-overview",frontMatter:{title:"SP8D Protocol Internals: Architecture Overview",description:"A high-level, visual, and practical overview of the SP8D protocol architecture, data flow, and slot state machine for implementers and advanced users.",keywords:["SP8D architecture","protocol internals","lock-free messaging","slot state machine","diagnostics","JavaScript","Node.js","high-performance messaging"],canonical:"https://sp8d.github.io/protocol-internals/architecture-overview"}},{name:"gen-cycle-byte",route:"/protocol-internals/gen-cycle-byte",frontMatter:{title:"SP8D Protocol Internals: Gen-Cycle Byte (Placeholder)",description:"Placeholder for Gen-Cycle Byte documentation."}},{name:"slot-state-machine",route:"/protocol-internals/slot-state-machine",frontMatter:{title:"SP8D Protocol Internals: Slot State Machine",description:"Deep dive into the SP8D slot state machine: lifecycle, transitions, fairness, and recovery. Visual diagrams and best practices for implementers and advanced users."}}]},{name:"quickstart",route:"/quickstart",children:[{data:{installation:{title:"Installation"},"minimal-example":{title:"Minimal Example"},"common-recipes":{title:"Common Recipes"}}},{name:"common-recipes",route:"/quickstart/common-recipes",frontMatter:{title:"SP8D Recipes: Integration Patterns for JavaScript & Node.js",description:"Common SP8D integration patterns and recipes for JavaScript and Node.js. Learn browser, Node.js, and AI/ML workflows with code samples and diagrams for high-performance messaging.",keywords:["SP8D recipes","integration patterns","JavaScript","Node.js","AI messaging","browser workers","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/quickstart/common-recipes"}},{name:"installation",route:"/quickstart/installation",frontMatter:{title:"Install SP8D: Quickstart Guide for JavaScript & Node.js",description:"How to install SP8D for ultra-fast, lock-free cross-thread communication in JavaScript and Node.js. Step-by-step requirements, setup, and troubleshooting for high-performance messaging.",keywords:["SP8D installation","quickstart","JavaScript","Node.js","SharedArrayBuffer","Atomics","setup guide","high-performance messaging"],canonical:"https://sp8d.github.io/quickstart/installation"}},{name:"minimal-example",route:"/quickstart/minimal-example",frontMatter:{title:"SP8D Minimal Example: Lock-Free Messaging in JavaScript & Node.js",description:"Minimal working SP8D example for real-time, lock-free messaging in JavaScript and Node.js. Copy-paste code for instant high-performance results.",keywords:["SP8D minimal example","quickstart","JavaScript","Node.js","lock-free messaging","concurrency","high-performance messaging"],canonical:"https://sp8d.github.io/quickstart/minimal-example"}}]}]}},function(e){e.O(0,[7812,2888,9774,179],function(){return e(e.s=9061)}),_N_E=e.O()}]);